apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'com.android.library'

ext {
    libGroupId = 'com.lenebf.ac'
    libVersion = releaseVersion
}

task sourcesJar(type: Jar) {
    def classifier = getArchiveClassifier()
    classifier.set('source')
    classifier.convention('source')
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    def classifier = getArchiveClassifier()
    classifier.set('javadoc')
    classifier.convention('javadoc')
    from javadoc.destinationDir
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact("$buildDir/outputs/aar/lib_component_application-release.aar")
            artifact sourcesJar
            artifact javadocJar
            groupId libGroupId
            artifactId 'component-app'
            version libVersion
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

// Bintray keys
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.key")
    publications = ['MyPublication']
    pkg {
        repo = 'maven'
        name = 'ac-component-app'
        desc = "App Catcher component application library $libVersion"
        licenses = ['GPL-3.0']
        vcsUrl = 'https://github.com/lenebf/AppCatcher'

        version {
            name = libVersion
            desc = "App Catcher component application library $libVersion"
            released = new Date()
            // vcsTag = 'tag_release_1.0.1'
        }
    }
}
